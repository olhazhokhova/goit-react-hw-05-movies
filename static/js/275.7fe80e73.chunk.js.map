{"version":3,"file":"static/js/275.7fe80e73.chunk.js","mappings":"gMACA,GAAgB,IAAM,kBAAkB,KAAO,mBAAmB,KAAO,oB,6CCiCzE,EA5Ba,WAET,IACA,GAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAeH,GAASI,MAAK,SAAAC,GAAI,OAAIN,EAAUM,EAAKC,SAAOC,YAC5D,CAACP,IAGIF,EAAOU,OAAS,GAAK,eAAIC,UAAWC,EAAAA,KAAf,SAChBZ,EAAOa,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UACnC,OAAO,gBAAaN,UAAWC,EAAAA,KAAxB,WACH,gBAAKD,UAAWC,EAAAA,IAAOM,IAAKF,EAZ5B,kCAYyDA,EAAeG,EAAcC,IAAKL,KAC3F,4BACI,eAAIJ,UAAWC,EAAAA,KAAf,SAAwBG,KACxB,uCAAeE,UAJPH,SAWxB,kD,qJC9BZ,IAAMO,EAAW,gCACXC,EAAU,mCAEhB,SAASC,IACP,OAAOC,MAAM,GAAD,OAAIH,EAAJ,oCAAwCC,IAAWhB,MAAK,SAAAmB,GAClE,GAAIA,EAAIC,GACN,OAAOD,EAAIE,UAKjB,SAASC,EAAed,GACtB,OAAOU,MAAM,GAAD,OAAIH,EAAJ,iBAAqBP,EAArB,oBAAmCQ,EAAnC,oBAA6DhB,MACvE,SAAAmB,GACE,GAAIA,EAAIC,GACN,OAAOD,EAAIE,UAMnB,SAASE,EAAmBC,GAC1B,OAAON,MAAM,GAAD,OACPH,EADO,iCAC0BC,EAD1B,kBAC2CQ,EAD3C,2BAEVxB,MAAK,SAAAmB,GACL,GAAIA,EAAIC,GACN,OAAOD,EAAIE,UAKjB,SAAStB,EAAeS,GACtB,OAAOU,MAAM,GAAD,OACPH,EADO,iBACUP,EADV,4BACgCQ,EADhC,oBAEVhB,MAAK,SAAAmB,GACL,GAAIA,EAAIC,GACN,OAAOD,EAAIE,UAKjB,SAASI,EAAkBjB,GACzB,OAAOU,MAAM,GAAD,OACPH,EADO,iBACUP,EADV,4BACgCQ,EADhC,oBAEVhB,MAAK,SAAAmB,GACL,GAAIA,EAAIC,GACN,OAAOD,EAAIE,Y","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"img\":\"Cast_img__-isbW\",\"cast\":\"Cast_cast__m5y0R\",\"name\":\"Cast_name__6UbFm\"};","import s from './Cast.module.css';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from '../../services/api';\nimport defaultImage from '../../images/no_photo.jpg';\n\nconst Cast = () => { \n\n    const PROFILE_URL = 'https://image.tmdb.org/t/p/w500';\n    const [actors, setActors] = useState([]);\n    const { movieId } = useParams();\n    \n    useEffect(() => {\n        fetchMovieCast(movieId).then(data => setActors(data.cast)).finally();\n    }, [movieId]);\n\n    return (\n            actors.length > 0 ? (<ul className={s.cast}>\n                {actors.map(({ id, name, profile_path, character }) => {\n                    return <li key={id} className={s.item}>\n                        <img className={s.img} src={profile_path ? PROFILE_URL + profile_path : defaultImage} alt={name} />\n                        <div>\n                            <h3 className={s.name}>{name}</h3>\n                            <p>Character: {character}</p>\n                        </div>\n                    </li>\n                })\n            }\n            </ul>)\n                :\n            <div>Cast list is empty</div>\n        )\n}\n\nexport default Cast;","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'adf034e2dfe8e0fada717e58b9449dc8';\n\nfunction fetchTrendingFilms() {\n  return fetch(`${BASE_URL}trending/all/day?api_key=${API_KEY}`).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n  });\n}\n\nfunction fetchMovieById(id) {\n  return fetch(`${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`).then(\n    res => {\n      if (res.ok) {\n        return res.json();\n      }\n    },\n  );\n}\n\nfunction fetchMoviesByQuery(query) {\n  return fetch(\n    `${BASE_URL}search/movie/?api_key=${API_KEY}&query=${query}&language=en-US&page=1`,\n  ).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n  });\n}\n\nfunction fetchMovieCast(id) {\n  return fetch(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`,\n  ).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n  });\n}\n\nfunction fetchMovieReviews(id) {\n  return fetch(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`,\n  ).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n  });\n}\n\nexport {\n  fetchTrendingFilms,\n  fetchMovieById,\n  fetchMoviesByQuery,\n  fetchMovieCast,\n  fetchMovieReviews,\n};\n"],"names":["useState","actors","setActors","movieId","useParams","useEffect","fetchMovieCast","then","data","cast","finally","length","className","s","map","id","name","profile_path","character","src","defaultImage","alt","BASE_URL","API_KEY","fetchTrendingFilms","fetch","res","ok","json","fetchMovieById","fetchMoviesByQuery","query","fetchMovieReviews"],"sourceRoot":""}