{"version":3,"file":"static/js/234.fb491bb4.chunk.js","mappings":"iMACA,K,uCCqCA,EAjCgB,WAEZ,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,WACNH,GAAS,IACTI,EAAAA,EAAAA,IAAkBH,GAASI,MAAK,SAAAC,GACL,IAAvBA,EAAKC,eAAuBP,GAAS,GACrCF,EAAWQ,EAAKE,YACjBC,YACJ,CAACR,IAGAF,GACI,kEAEA,eAAIW,UAAWC,EAAAA,OAAf,SAEQd,EAAQe,KAAI,YAA0C,IAAvCC,EAAsC,EAAtCA,GAAIC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAChC,OAAO,gBAAaN,UAAWC,EAAAA,KAAxB,WACH,gBAAID,UAAWC,EAAAA,KAAf,qBAAgCG,MAChC,uBAAIC,KACJ,uBAAIC,MAHQH,U,0MCxBxCI,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEVC,EAAkB,mCAAG,oGACPF,IAAAA,IAAA,mCAAsCC,IAD/B,cACnBE,EADmB,yBAElBA,EAAId,MAFc,2CAAH,qDAKlBe,EAAc,mCAAG,WAAMR,GAAN,uFACHI,IAAAA,IAAA,gBAAmBJ,EAAnB,oBAAiCK,EAAjC,oBADG,cACfE,EADe,yBAEdA,EAAId,MAFU,2CAAH,sDAKdgB,EAAkB,mCAAG,WAAMC,GAAN,uFACPN,IAAAA,IAAA,+BACQC,EADR,wCAC+CK,IAFxC,cACnBH,EADmB,yBAIlBA,EAAId,MAJc,2CAAH,sDAOlBkB,EAAc,mCAAG,WAAMX,GAAN,uFACHI,IAAAA,IAAA,gBACPJ,EADO,4BACeK,EADf,oBADG,cACfE,EADe,yBAIdA,EAAId,MAJU,2CAAH,sDAOdF,EAAiB,mCAAG,WAAMS,GAAN,uFACNI,IAAAA,IAAA,gBACPJ,EADO,4BACeK,EADf,oBADM,cAClBE,EADkB,yBAIjBA,EAAId,MAJa,2CAAH","sources":["components/Reviews/Reviews.module.css","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import s from './Reviews.module.css';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from '../../services/api';\n\nconst Reviews = () => { \n\n    const [reviews, setReviews] = useState([]);\n    const [empty, setEmpty] = useState(true);\n    const { movieId } = useParams();\n    \n    useEffect(() => {\n        setEmpty(false);\n        fetchMovieReviews(movieId).then(data => {\n            data.total_results === 0 && setEmpty(true);\n            setReviews(data.results);\n        }).finally();\n    }, [movieId]);\n\n    return (\n        empty ?  \n            <div> This movie hasn't any review yet. </div>\n            :\n            <ul className={s.review}>\n                {\n                    reviews.map(({ id, author, content, updated_at }) => {\n                        return <li key={id} className={s.item}>\n                            <h3 className={s.name}>Author: {author}</h3>\n                            <p>{content}</p>\n                            <p>{updated_at}</p>\n                        </li>\n                    })\n                }\n            </ul>\n        \n    )\n}\n\nexport default Reviews;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'adf034e2dfe8e0fada717e58b9449dc8';\n\nconst fetchTrendingFilms = async () => {\n  const res = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n  return res.data;\n};\n\nconst fetchMovieById = async id => {\n  const res = await axios.get(`movie/${id}?api_key=${API_KEY}&language=en-US`);\n  return res.data;\n};\n\nconst fetchMoviesByQuery = async query => {\n  const res = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}`\n  );\n  return res.data;\n};\n\nconst fetchMovieCast = async id => {\n  const res = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data;\n};\n\nconst fetchMovieReviews = async id => {\n  const res = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data;\n};\n\nexport {\n  fetchTrendingFilms,\n  fetchMovieById,\n  fetchMoviesByQuery,\n  fetchMovieCast,\n  fetchMovieReviews,\n};\n"],"names":["useState","reviews","setReviews","empty","setEmpty","movieId","useParams","useEffect","fetchMovieReviews","then","data","total_results","results","finally","className","s","map","id","author","content","updated_at","axios","API_KEY","fetchTrendingFilms","res","fetchMovieById","fetchMoviesByQuery","query","fetchMovieCast"],"sourceRoot":""}