{"version":3,"file":"static/js/935.1feec1c7.chunk.js","mappings":"qLACA,EAAyB,uB,SCazB,EAXe,WACX,OACI,gBAAKA,UAAWC,EAAhB,UACI,SAAC,KAAD,CAAWC,OAAO,KACdC,MAAM,KACNC,MAAM,UACNC,eAAe,kB,4GCR/B,EAAuB,yBAAvB,EAAwD,0BAAxD,EAA2F,2BAA3F,EAAiI,6BAAjI,EAAqK,yBAArK,EAAyM,6B,6BCiEzM,EA5DmB,WAEf,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAgCJ,EAAAA,EAAAA,WAAS,GAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAoCT,EAAAA,EAAAA,UAAS,IAA7C,eAAOU,EAAP,KAAmBC,EAAnB,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAQN,EAAaO,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACNV,GAAY,GACZQ,GAASA,EAAMG,OAAS,IAAKC,EAAAA,EAAAA,IAAmBJ,GAAOK,MAAK,SAAAC,GACxDlB,EAAUkB,EAAKC,SACQ,IAAvBD,EAAKE,eAAuBhB,GAAY,MACzCiB,SAAQ,WACPnB,GAAa,QAElB,CAACU,IAaJ,OACI,iCACI,kBAAMpB,UAAWC,EAAQ6B,SAbhB,SAACC,GACdA,EAAEC,iBACFtB,GAAa,GACbK,EAAgB,CAAEK,MAAOW,EAAEE,cAAcC,SAASd,MAAMe,QACxDlB,EAAc,KASV,WACI,kBAAOmB,KAAK,OAAOpC,UAAWC,EAASoC,KAAK,QAAQF,MAAOnB,EAAYsB,SAP7D,SAACP,GACnBd,EAAcc,EAAEE,cAAcE,WAOtB,mBAAQnC,UAAWC,EAAUsC,SAAgC,IAAtBvB,EAAWO,OAAlD,uBAEHd,IAAa,SAAC+B,EAAA,EAAD,KACZ/B,GAAaF,EAAOgB,OAAS,IAC3B,eAAIvB,UAAWC,EAAf,SAEQM,EAAOkC,KAAI,YAAiC,IAA/BC,EAA8B,EAA9BA,GAAIC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,cACpB,OACI,yBACI,SAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAM7B,GAAWlB,UAAWC,EAAhE,SAA2E0C,GAAgBC,KADtFF,SASxBjC,GAAaE,IAAa,iBAAKX,UAAWC,EAAhB,+BAA+Ca,EAAaO,IAAI,SAAhE,qB,0MCzD3C2B,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEVC,EAAkB,mCAAG,oGACPF,IAAAA,IAAA,mCAAsCC,IAD/B,cACnBE,EADmB,yBAElBA,EAAIzB,MAFc,2CAAH,qDAKlB0B,EAAc,mCAAG,WAAMV,GAAN,uFACHM,IAAAA,IAAA,gBAAmBN,EAAnB,oBAAiCO,EAAjC,oBADG,cACfE,EADe,yBAEdA,EAAIzB,MAFU,2CAAH,sDAKdF,EAAkB,mCAAG,WAAMJ,GAAN,uFACP4B,IAAAA,IAAA,gCACSC,EADT,kBAC0B7B,EAD1B,2BADO,cACnB+B,EADmB,yBAIlBA,EAAIzB,MAJc,2CAAH,sDAOlB2B,EAAc,mCAAG,WAAMX,GAAN,uFACHM,IAAAA,IAAA,gBACPN,EADO,4BACeO,EADf,oBADG,cACfE,EADe,yBAIdA,EAAIzB,MAJU,2CAAH,sDAOd4B,EAAiB,mCAAG,WAAMZ,GAAN,uFACNM,IAAAA,IAAA,gBACPN,EADO,4BACeO,EADf,oBADM,cAClBE,EADkB,yBAIjBA,EAAIzB,MAJa,2CAAH","sources":["webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/MoviesPage/MoviesPage.module.css?564c","components/MoviesPage/MoviesPage.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { ThreeDots } from  'react-loader-spinner'\nimport s from './Loader.module.css';\n\nconst Loader = () => { \n    return (\n        <div className={s.loader}>\n            <ThreeDots heigth=\"80\"\n                width=\"80\"\n                color='#3f51b5'\n                secondaryColor=\"lightGrey\" />\n        </div>\n        )\n}\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"MoviesPage_form__Hzb4A\",\"input\":\"MoviesPage_input__h5lTQ\",\"button\":\"MoviesPage_button__HN2QC\",\"unstyled\":\"MoviesPage_unstyled__iyR+l\",\"link\":\"MoviesPage_link__Kqtq6\",\"notFound\":\"MoviesPage_notFound__LX41k\"};","import { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport s from './MoviesPage.module.css';\nimport { fetchMoviesByQuery } from '../../services/api';\nimport Loader from '../Loader';\n\nconst MoviesPage = () => {\n\n    const [movies, setMovies] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [notFound, setNotFound] = useState(false);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [inputValue, setInputValue] = useState('');\n    const location = useLocation();\n\n    const query = searchParams.get('query');\n\n    useEffect(() => {\n        setNotFound(false);\n        query && query.length > 0 && fetchMoviesByQuery(query).then(data => {\n            setMovies(data.results);\n            data.total_results === 0 && setNotFound(true);\n        }).finally(() => {\n            setIsLoading(false);\n        })\n    }, [query])\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        setIsLoading(true);\n        setSearchParams({ query: e.currentTarget.elements.query.value });\n        setInputValue('');\n    }\n\n    const onInputChange = (e) => {\n        setInputValue(e.currentTarget.value); \n    }\n\n    return (\n        <>\n            <form className={s.form} onSubmit={onSubmit}>\n                <input type=\"text\" className={s.input} name=\"query\" value={inputValue} onChange={onInputChange}/>\n                <button className={s.button} disabled={inputValue.length === 0}>Search</button>\n            </form>\n            {isLoading && <Loader />}\n            {!isLoading && movies.length > 0 &&\n                <ul className={s.unstyled}>\n                    {\n                        movies.map(({id, title, original_name}) => {\n                            return (\n                                <li key={id}>\n                                    <Link to={`/movies/${id}`} state={{ from: location}} className={s.link} >{ title ? title : original_name }</Link>\n                                </li>\n                            )\n                        })\n                    }\n                </ul>\n            }\n            {\n                !isLoading && notFound &&  <div className={s.notFound}>Movies with query {searchParams.get('query')} not found</div>\n            }\n            \n        </>\n    )\n}\n\nexport default MoviesPage;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'adf034e2dfe8e0fada717e58b9449dc8';\n\nconst fetchTrendingFilms = async () => {\n  const res = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n  return res.data;\n};\n\nconst fetchMovieById = async id => {\n  const res = await axios.get(`movie/${id}?api_key=${API_KEY}&language=en-US`);\n  return res.data;\n};\n\nconst fetchMoviesByQuery = async query => {\n  const res = await axios.get(\n    `search/movie/?api_key=${API_KEY}&query=${query}&language=en-US&page=1`\n  );\n  return res.data;\n};\n\nconst fetchMovieCast = async id => {\n  const res = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data;\n};\n\nconst fetchMovieReviews = async id => {\n  const res = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data;\n};\n\nexport {\n  fetchTrendingFilms,\n  fetchMovieById,\n  fetchMoviesByQuery,\n  fetchMovieCast,\n  fetchMovieReviews,\n};\n"],"names":["className","s","heigth","width","color","secondaryColor","useState","movies","setMovies","isLoading","setIsLoading","notFound","setNotFound","useSearchParams","searchParams","setSearchParams","inputValue","setInputValue","location","useLocation","query","get","useEffect","length","fetchMoviesByQuery","then","data","results","total_results","finally","onSubmit","e","preventDefault","currentTarget","elements","value","type","name","onChange","disabled","Loader","map","id","title","original_name","to","state","from","axios","API_KEY","fetchTrendingFilms","res","fetchMovieById","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}