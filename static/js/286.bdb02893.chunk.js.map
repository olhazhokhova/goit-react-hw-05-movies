{"version":3,"file":"static/js/286.bdb02893.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieDetailsPage/MovieDetailsPage.module.css?377f","components/MovieDetailsPage/MovieDetailsPage.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { ThreeDots } from  'react-loader-spinner'\nimport s from './Loader.module.css';\n\nconst Loader = () => { \n    return (\n        <div className={s.loader}>\n            <ThreeDots heigth=\"80\"\n                width=\"80\"\n                color='#3f51b5'\n                secondaryColor=\"lightGrey\" />\n        </div>\n        )\n}\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"movie\":\"MovieDetailsPage_movie__KlXwI\",\"movieInfo\":\"MovieDetailsPage_movieInfo__NuFQu\",\"heading\":\"MovieDetailsPage_heading__cvbCA\",\"title\":\"MovieDetailsPage_title__MDJ+L\",\"genres\":\"MovieDetailsPage_genres__HV3uS\",\"additional\":\"MovieDetailsPage_additional__BCHVj\",\"link\":\"MovieDetailsPage_link__ZE1Eo\",\"imgWrap\":\"MovieDetailsPage_imgWrap__sC3MV\",\"img\":\"MovieDetailsPage_img__jzc+4\",\"back\":\"MovieDetailsPage_back__B440W\"};","\nimport { useState, useEffect } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { BsArrowLeft } from 'react-icons/bs';\n\nimport s from './MovieDetailsPage.module.css';\nimport { fetchMovieById } from '../../services/api';\nimport Loader from '../Loader';\nimport defaultImage from '../../images/no_photo.jpg';\n\nconst MovieDetailsPage = () => {\n    const POSTER_URL = 'https://image.tmdb.org/t/p/w500';\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState([]);\n    \n    const location = useLocation();\n\n    useEffect(() => {\n        fetchMovieById(movieId).then(data => setMovie(data)).finally();\n    }, [movieId]);\n\n    const { title, release_date, vote_average, overview, genres, poster_path } = movie;\n    return (\n        <>\n            <Link to={location?.state?.from ?? '/movies'} className={s.back}><BsArrowLeft />Back</Link>\n            {movie &&\n                <div className={s.movie}>\n                    <div className={s.movieInfo}>\n                        <div className={s.imgWrap}>\n                            {\n                                poster_path ? \n                                    <img src={`${poster_path ? POSTER_URL + poster_path : defaultImage}`} alt={title} className={s.img} />\n                                    :\n                                    <Loader />\n\n                            }\n                        </div>\n                        <div>\n                            <h1 className={s.heading}>{title} ({new Date(release_date).getFullYear()})\n                            </h1>\n                            <p>User score: {vote_average * 10}%</p>\n                            <h2 className={s.title}>Overview</h2>\n                            <p>{overview}</p>\n                            {\n                                genres && genres.length > 0 &&\n                                <>\n                                    <h2 className={s.title}>Genres</h2>\n                                    <ul className={s.genres}>{genres.map(({ id, name }) => <li key={id}>{name}</li>)}</ul>\n                                </>\n                            }\n                        </div>\n                    </div>\n                    <div className={s.additional}>\n                        <h2>Additional information</h2>\n                        <ul className={s.unstyled}>\n                            <li>\n                                <Link to=\"cast\" state={{ from: location }} className={s.link} >Cast</Link>\n                            </li>\n                            <li>\n                                <Link to=\"reviews\" state={{ from: location }} className={s.link} >Reviews</Link>\n                            </li>\n                        </ul>\n                        <Outlet />\n                    </div>\n                </div>\n            }\n        </>\n    )\n}\n\nexport default MovieDetailsPage;","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'adf034e2dfe8e0fada717e58b9449dc8';\n\nfunction fetchTrendingFilms() {\n  return fetch(`${BASE_URL}trending/all/day?api_key=${API_KEY}`).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n  });\n}\n\nfunction fetchMovieById(id) {\n  return fetch(`${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`).then(\n    res => {\n      if (res.ok) {\n        return res.json();\n      }\n    },\n  );\n}\n\nfunction fetchMoviesByQuery(query) {\n  return fetch(\n    `${BASE_URL}search/movie/?api_key=${API_KEY}&query=${query}&language=en-US&page=1`,\n  ).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n  });\n}\n\nfunction fetchMovieCast(id) {\n  return fetch(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`,\n  ).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n  });\n}\n\nfunction fetchMovieReviews(id) {\n  return fetch(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`,\n  ).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n  });\n}\n\nexport {\n  fetchTrendingFilms,\n  fetchMovieById,\n  fetchMoviesByQuery,\n  fetchMovieCast,\n  fetchMovieReviews,\n};\n"],"names":["className","s","heigth","width","color","secondaryColor","movieId","useParams","useState","movie","setMovie","location","useLocation","useEffect","fetchMovieById","then","data","finally","title","release_date","vote_average","overview","genres","poster_path","to","state","from","src","defaultImage","alt","Loader","Date","getFullYear","length","map","id","name","BASE_URL","API_KEY","fetchTrendingFilms","fetch","res","ok","json","fetchMoviesByQuery","query","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}